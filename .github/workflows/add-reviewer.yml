name: PR Approval Check 2

on:
  workflow_run:
    workflows: ["Receive PR 2"]
    types: ["completed"]

jobs:
  resolve-pr:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.out.outputs.pr_number }}
      head_sha:  ${{ steps.out.outputs.head_sha }}
      head_repo: ${{ steps.out.outputs.head_repo }}
      head_branch: ${{ steps.out.outputs.head_branch }}
    steps:
      - id: out
        name: Extract PR from workflow_run payload (fallback to REST if empty)
        uses: actions/github-script@v7
        with:
          script: |
            const wr = context.payload.workflow_run;
            const first = (wr.pull_requests || [])[0];

            let prNumber = first?.number ?? null;
            const headSha = wr.head_sha;
            const headBranch = first?.head?.ref ?? wr.head_branch;
            const headRepo = first?.head?.repo?.full_name ?? wr.head_repository?.full_name;

            if (!prNumber) {
              // Fallback: map commit ‚Üí PR(s)
              const res = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: headSha,
              });
              prNumber = res.data[0]?.number ?? null;
            }

            core.setOutput('pr_number', prNumber ?? '');
            core.setOutput('head_sha', headSha ?? '');
            core.setOutput('head_branch', headBranch ?? '');
            core.setOutput('head_repo', headRepo ?? '');

      - name: Comment what we resolved
        if: ${{ steps.out.outputs.pr_number != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number("${{ steps.out.outputs.pr_number }}"),
              body: `üîê Privileged run.\nHead: \`${{ steps.out.outputs.head_repo }}@${{ steps.out.outputs.head_branch }}\`\nSHA: \`${{ steps.out.outputs.head_sha }}\``
            });

  approval:
    runs-on: ubuntu-latest
    steps:
      - name: Mint installation token
        id: app-token
        uses: actions/create-github-app-token@v2.1.4
        with:
          app-id: ${{ secrets.PR_APPROVAL_CHECK_APP_ID }}
          private-key: ${{ secrets.PR_APPROVAL_CHECK }}

      - name: blah
        uses: actions/github-script@v7
        env:
          BLAH: ${{ github.event.workflow_run.pull_requests[0].number }}
        with:
          script: |
            console.log("BLAH:", process.env.BLAH)

      - name: Require Product Eng approval
        uses: trufflesecurity/pr-approval-check@workflow-triggered
        with:
          org: trufflejw
          approver_team: jeffteam
          owner: ${{ github.event.workflow_run.pull_requests[0].head.repo.owner }}
          repo: ${{ github.event.workflow_run.pull_requests[0].head.repo.full_name }}
          head: ${{ github.event.workflow_run.pull_requests[0].head.sha }}
          number: ${{ github.event.workflow_run.pull_requests[0].number }}
          github_token: ${{ steps.app-token.outputs.token }}


